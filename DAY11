PROGRAM 1:

Given a string S in encoded form, and  an integer array indices[] of string length.

You need to find the decoded form of String S, 
by moving each character at ith position in S, to indices[i] position in decoded string.
and then print the decoded string.

Input Format:
-------------
Line-1 -> A String S, enocded string of length L, 
          S conatins only lowercase alphabets [a-z]
Line-2 -> L space separated integers indices[], where 0 <=indices[i] < L 

Output Format:
--------------
Print a String, decoded string.


Sample Input-1:
---------------
aeilmmor
6 1 5 7 2 0 3 4

Sample Output-1:
----------------
memorial

Explanation:
---------------
Given String, a e i l m m o r
			  6 1 5 7 2 0 3 4
after shifting,	memorial


Sample Input-2:
---------------
aidin
4 3 2 0 1

Sample Output-2:
----------------
india

Explanation-2:
---------------
Given String, a i d i n
			  4 3 2 0 1
after shifting,	india


SOL:

def pat(s,l):
    k=[0]*len(l)
    c=0
    for i in l:
        
        k[i]=s[c]
        c+=1
    st=""
    for i in k:
        st=st+i
    return st
s=input()
l=list(map(int,input().split()))
print(pat(s,l))

PROGRAM 2:


There are B bags containing N gold boxes each. In each bag, gold boxes are 
arranged  in ascending order of their weights strictly, create a method in 
such a way that we need to return the least weight of gold box which is 
common least weight in all the given bags.

If we donâ€™t have any common least weighted gold box, among all the bags then return -1.

Input Format:
-------------
Line-1: Two integers B and N, number of bags and number of goldboxes in each Bag.
Next B lines: N space separated integers, weights of GoldBoxes.

Output Format:
--------------
Print the least weight of gold box, if found
Print -1, if not found.


Sample Input:
---------------
5 5
1 2 3 4 5
2 3 6 7 9
1 2 3 5 8
1 3 4 6 8 
2 3 5 7 8

Sample Output:
----------------
3


SOL:

m,n=map(int,input().split())
l=[]
for i in range(m):
    l.append(list(map(int,input().split())))
d={}
for i in l:
    for j in set(i):
        if j not in d:
            d[j]=1
        else:
            d[j]+=1

k=[]
for i in d:
    if d[i]==m:
        k.append(i)
if len(k)>=1:
    print(min(k))
else:
    print(-1)
    
    
 PROGRAM 3:
 In a shopping mall, there is a Lift with a capacity of 500kgs only.
There are N persons waiting for the lift, and their weights (weights[]) are given.
If The Lift is overloaded, it will not move.
 
Your task is to find out the maximum number of persons can use the Lift,
without any overloading issue.

Input Format:
-------------
Line-1: An integer N, number of persons
Line-2: N space separated integers, weights of the persons.

Output Format:
--------------
Print an integer, max num of persons canuse the lift.


Sample Input-1:
---------------
6
98 121 76 135 142 65

Sample Output-1:
----------------
5

Sample Input-2:
---------------
7
85 67 69 83 54 61 50

Sample Output-2:
----------------
7

CODE:

n=input()
l=list(map(int,input().split()))
l.sort()
k=500
s=0
c=0
for i in l:
    if s+i<=500:
        s=s+i
        c+=1
print(c)

