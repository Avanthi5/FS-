PROGRAM 1:

write a program to read a postive input 'n' from the user and print the following pattern 

Assume the input 'n' will always be a postive integer 

input = 5
output = 
A*1
B*C*3*2
D*E*F*6*5*4
G*H*I*J*10*9*8*7
K*L*M*N*O*15*14*13*12*11
 
Note - If in the above pattern if the alphabet exceed 'Z' then start print again from 'A'


code:

def patt(n):
    a=65
    c=0
    for i in range(1,n+1):
        c=c+i
        k=c
        for j in range(1,i+1):
            if a==90:
                print(chr(a)+"*",end=" ")
                a=65
            else:
                print(chr(a)+"*",end=" ")
                a=a+1
        for m in range(i,0,-1):
            if m==1:
                print(k,end=" ")
                k=k-1
            else:
                print(str(k)+'*',end=" ")
                k=k-1
        print()
s=int(input())
patt(s)

PROGRAM 2:

You are given an alphanumeric word W.
You need to find the number of words that can be formed from W.

The words have the following properties:
    - It should be a substring of W of any length, minimum 1.
    - All the letters in the word should be same.


Input Format:
-------------
Single String W.

Output Format:
--------------
Print an integer, the number of words can be formed


Sample Input-1:
---------------
paddy
 
Sample Output-1:
----------------
6

Explanation:
------------
The words are : p, a, d, d, dd, y


Sample Input-2:
---------------
abcde

Sample Output-2:
----------------
5

Explanation:
------------
The words are : a,b,c,d,e

CODE:


def words(s):
    c=0
    l=1
    for i in range(1,len(s)):
        if s[i]==s[i-1]:
            l+=1
        else:
            c=c+(l*(l+1))//2
            l=1
    c=c+(l*(l+1))//2
    return c
s=input()
print(words(s))


PROGRAM 3:
There is a board with M*N size. 
The board contains M*N blocks of 1*1 size.
Each block is printed a number on it.

You will be given a number, your task is to find whether the number is printed on 
any of the blocks or not. If found print yes, otherwise print no.

NOTE: 
- The numbers printed on the board in each row are in increasing order. 
- Next row starting number is greater than the last number of the previous row.

Constarint:
-----------
Can you solve it in log(M)+ log(N) time. 


Input Format:
-------------
Line-1 -> Two integers M and N, board size.
Next M lines -> N space separated integers.
Last Line -> An integer T, number to search.

Output Format:
--------------
Print a boolean value, 'yes' if number found.
otherwise, 'no'.


Sample Input-1:
---------------
4 4
1 3 6 10
12 15 19 23
24 28 32 36
37 41 44 47
15

Sample Output-1:
----------------
yes


Sample Input-2:
---------------
4 4
1 3 6 10
12 15 19 23
24 28 32 36
37 41 44 47
26

Sample Output-2:
----------------
no

def find(m,n,l,f):
    for i in l:
        if f in i:
            return 'yes'
    return 'no'
m,n=map(int,input().split())
l=[]
for i in range(m):
    l.append(list(map(int,input().split())))
f=int(input())
print(find(m,n,l,f))
