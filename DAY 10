PROGRAM :


Soumika has a string S and its starting index is 1. 
The string S consists of characters from 1-9. As she is very intelligent, she wants to test his brother Vinay Tendulkar. 
She asked her brother Vinay Tendulkar to count the number of even numbered characters ( i.e 2,4,6,8 ) for every index i

For an index i, the result should be calculated from i to the end of the string. 

As Vinay doesn't know about programming, he wants you to help him find the solution.

Input:
First line contains a string S.

Output:
Print |S| space-separated integers,the result of every index.

Sample Input :
574674546476

Sample Output :
7 7 7 6 5 5 4 4 3 2 1 1

Explanation :

Given string S is .
for index 1
Number of even numbers from 5 to end of the string is 7 so the result of index 1 is 7.
for index 2
Number of even numbers from 7 to end of the string is 7 so the result of index 2 is 7.
for index 3
Number of even numbers from 4 to end of the string is 7 so the result of index 3 is 7.
for index 3
Number of even numbers from 6 to end of the string is 6 so the result of index 4 is 6.....
.
.
.

ex:2
input=64646442
output=8 7 6 5 4 3 2 1
  
  
 CODE:
 def even(n):
    l=list(n)
    s=""
    for i in range(len(l)):
        k=[l[x] for x in range(i,len(l)) if int(l[x])%2==0]
        s=s+str(len(k))+" "
    return s
n=input()
print(even(n))



PROGRAM:


Ramu a School boy given a number 'n' writes it vertically down and writes up again verically up (n-1) lines in increasing order of 1.
He Repeats the above process continously. 


input = 5
output =
1
2 9
3 8 10
4 7 11 14 
5 6 12 13 15



input = 6
output = 
1
2 11
3 10 12
4 9 13 18
5 8 14 17 19
6 7 15 16 20 21

CODE:

def pat(n):
    k=[i for i in range(1,(n*(n+1))//2+1)]
    l=[]
    c=n
    i=0
    while(c>0):
        l.append(k[i:i+c])
        i=i+c
        c=c-1
    for i in range(len(l)):
        if i%2!=0:
            l[i]=l[i][::-1]
    for i in range(len(l)):
        if len(l[i])!=n:
            k=n-len(l[i])
            for j in range(k):
                l[i].insert(j," ")
    for i in range(len(l)):
        s=""
        for j in range(len(l)):
            s=s+str(l[j][i])+" "
        print(s)
            
    
n=int(input())
pat(n)

(OR)

import java.util.*;
class test
{
    static void pattern(int n)
    {
        int i,j,k=0,temp=0;
        for(i=1;i<=n;i++)
        {
            System.out.print(i+" ");
            k=i;
            for(j=1;j<i;j++)
            {
                if(j%2==0)
                {
                    System.out.print(k+(2*(i-j))+" ");
                    k=k+2*(i-j);
                }
                else
                {
                    System.out.print(k+((2*(n-i+1))-1)+" ");
                    k+=(2*(n-i+1))-1;
                }
            }
            System.out.println();
        }
    }
    public static void main(String[]args)
    {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        pattern(n);
    }
}




PROGRAM:



Rahul is given a row of numbers where each row and columns are same. 
Rahul now prints the numbers of the rows as shown in the following manner. 
Help Rahul to write the code .

The first line of input consists of the size followed by the row numbers. 

Sample Input:
3
1 2 3 
4 5 6
7 8 9


Explanation:

1<-2<-3 
|
4->5->6
             |
7<-8<-9
   

Sample Output: 
3 2 1 4 5 6 9 8 7

CODE:
def pat(l,n):
    k=[]
    for i in range(len(l)):
        if i%2==0:
            k.append(l[i][::-1])
        else:
            k.append(l[i])
    s=""
    for i in range(len(k)):
        for j in k[i]:
            s=s+str(j)+" "
    return s
n=int(input())
l=[]
for i in range(n):
    l.append(list(map(int,input().split())))
print(pat(l,n))
